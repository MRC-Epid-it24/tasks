- name: Include shared vars
  include_vars: '../instances/{{ instance }}/tasks/app.json'

- name: Create/check group
  group:
    name: '{{ env.group }}'
    state: present

- name: Create/check user
  user:
    name: '{{ env.user }}'
    group: '{{ env.group }}'

- name: Install OS dependencies (git / nodejs)
  apt:
    update-cache: yes
    cache_valid_time: 86400
    name: [git, nodejs]
    state: present

- name: Create/check application directory
  file:
    path: '{{ env.directory }}'
    state: directory
    owner: '{{ env.user }}'
    group: '{{ env.group }}'

- name: Checkout source from git repository
  become_user: '{{ env.user }}'
  git:
    repo: '{{ git.repository }}'
    dest: '{{ env.directory }}'
    version: '{{ git.branch }}'
    force: yes
    accept_hostkey: true

- name: Install pnpm to latest
  become_user: '{{ env.user }}'
  command: corepack install
  args:
    chdir: '{{ env.directory }}'

- name: Install package dependencies
  become_user: '{{ env.user }}'
  command: pnpm install
  args:
    chdir: '{{ env.directory }}'

- name: Copy .env config file
  become_user: '{{ env.user }}'
  copy:
    src: '{{ files.env }}'
    dest: '{{ env.directory }}/.env'
    mode: '600'

- name: Copy tasks config file
  become_user: '{{ env.user }}'
  copy:
    src: '{{ files.tasks }}'
    dest: '{{ env.directory }}/tasks.json'
    mode: '644'

- name: Build intake24-tasks project
  become_user: '{{ env.user }}'
  command: pnpm build
  args:
    chdir: '{{ env.directory }}'

- name: Check if service is already running
  shell: systemctl is-active {{ env.user }}
  register: service_active
  failed_when: false

- name: Stop service if already running
  service:
    name: '{{ env.user }}'
    state: stopped
  when: service_active.rc == 0

- name: Copy systemd service file
  template:
    src: tasks.service.j2
    dest: '/lib/systemd/system/{{ env.user }}.service'
    owner: root
    group: root
    mode: '644'

- name: Enable service
  service:
    name: '{{ env.user }}'
    enabled: yes

- name: Restart service to apply configuration changes
  service:
    name: '{{ env.user }}'
    state: restarted
